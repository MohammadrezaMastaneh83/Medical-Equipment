import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { constants } from "buffer";
import localFont from "next/font/local";
import Header from "./components/header/header";
import Header2 from "./components/header2/header2";
import Footer from "./components/footer/footer";
import { LayoutProvider } from "./layoutprovider";

const inter = Inter({ subsets: ["latin"] });
const Light = localFont({
  src: "./font/IranSansX(SemiPro)/iransansX family/IRANSansX-Light.ttf",
  variable: "--Light",
});
const medium = localFont({
  src: "./font/IranSansX(SemiPro)/iransansX family/IRANSansX-Medium.ttf",
  variable: "--medium",
});
const mediumNumber = localFont({
  src: "./font/IranSansX(SemiPro)/Farsi numerals/IRANSansXFaNum-Medium.ttf",
  variable: "--mediumNumber",
});
const regularNumber = localFont({
  src: "./font/IranSansX(SemiPro)/Farsi numerals/IRANSansXFaNum-Regular.ttf",
  variable: "--regularNumber",
});
const UltraLight = localFont({
  src: "./font/IranSansX(SemiPro)/iransansX family/IRANSansX-UltraLight.ttf",
  variable: "--ultralight",
});
const Medium = localFont({
  src: "./font/font_yekan_bakh/YekanBakh-Medium.ttf",
  variable: "--YekanMedium",
});
const light = localFont({
  src: "./font/font_yekan_bakh/YekanBakh-Light.ttf",
  variable: "--Yekanlight",
});
const Medium_estedad = localFont({
  src: "./font/Estedad-v5.0-Fontjo.com/ttf/Estedad-Medium.ttf",
  variable: "--Mediumestedad",
});
const Light_estedad = localFont({
  src: "./font/Estedad-v5.0-Fontjo.com/ttf/Estedad-Light.ttf",
  variable: "--Lightstedad",
});
const SemiBold_estedad = localFont({
  src: "./font/Estedad-v5.0-Fontjo.com/ttf/Estedad-SemiBold.ttf",
  variable: "--SemiBoldstedad",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  //  function MyApp({ Component, pageProps }: AppProps) {
  // const router = useRouter();

  // if(router.pathname === '_error') return <NotFound  />;
  return (
    <html lang="fa">
      <body
        dir="rtl"
        className={`${Light.variable} ${UltraLight.variable} ${medium.variable} ${mediumNumber.variable} ${regularNumber.variable} ${Medium.variable} ${light.variable} ${Medium_estedad.variable} ${Light_estedad.variable} ${SemiBold_estedad.variable} `}
      >
       <LayoutProvider>
        {children}
       </LayoutProvider>
        
      </body>
    </html>
  );
}

